1.
Según lo visto en clase, lo más importante antes de crear nuestra aplicación (con base de datos), es:

Diseñar la base de datos.

2.
MySQL es una base de datos tipo:

Relacional

3.
Los dos tipos más comunes de tablas (por diseño) son:

Catálogo y transacciones

4.
Al diseñar todas las tablas de una base de datos relacional, una de las grandes ventajas mencionadas en el curso es:

La normalización de los datos.

5.
El tipo de tablas MYISAM es mejor para:

Tablas de tipo transacciones

6.
Según lo visto en el curso, ¿cuál de los siguientes formatos es correcto (por convención) para nombrar una tabla?

records

7.
¿Qué columna nunca debe faltar en una tabla de una base de datos relacional?

Un identificador único.

8.
¿Qué carácter denota el final de una sentencia de SQL en MySQL?

( ; )

9.
¿Cuál de los siguientes comandos se usa para listar las bases de datos existentes en la instalación de MySQL?

SHOW DATABASES

10.
¿Cuál de los siguientes comandos sirve para movernos a una base de datos específica? (supongamos que la base de datos se llama “library”):

USE library;

11.
El wildcard (caracter para denotar “lo que sea”) en una cadena de caracteres en MySQL es:

( % )

12.
Una vez que estamos dentro de la base de datos “library”, ¿cuál de los siguientes comandos sirve para listar todas las tablas que contengan la cadena de caracteres “books” en su nombre?

SHOW tables LIKE '%books%';

13.
El caracter para denotar “todas las columnas” en una sentencia SELECT es:

( * )

14.
El comando para conocer la estructura de una tabla es:

SHOW tabla

15.
El comando para explorar/traer el contenido de una tabla es:

SELECT

16.
El operador para traer sólo X número de tuplas tras hacer un query es:

LIMIT X

17.
En MySQL, con una base de datos diseñada con respecto a la convenciones normales (vistas en el curso), las tablas se relacionan unas con otras a través de:

Una columna de identificador.

18.
¿Cuál de los siguientes es una consulta o query bien formado? (asumamos que existe una tabla llamada books con al menos una columna llamada book_id )

SELECT * FROM books WHERE book_id = 4;

19.
El operador para cruzar dos o más tablas en MySQL es:

JOIN

20.
Asumiendo que existen las tablas books y authors con sus respectivas columnas de identificación, cuál de las siguientes sentencias es correcta a continuación de […] FROM books AS b JOIN authors AS a:

ON a.book_id = b.book_id [...]

21.
Asumiendo un query que está bien escrito y que las dos tablas en cuestión no son vacías, ¿cuál es el principal problema cuando se omite el campo de unión entre dos tablas tras cualquier JOIN?

el resultado es vacío

22.
¿Cuál de los siguientes tipos de datos no es un dato numérico?

VARCHAR

23.
Si quiero almacenar una fecha/hora sin restricciones de año, debo usar:

TIMESTAMP

24.
Si queremos que un campo no se pueda repetir en toda la tabla, usamos:

UNIQUE

25.
En una tabla que almacene los datos personales de nuestros clientes, la restricción de UNIQUE es muy útil en una columna que almacene:

Dirección de correo electrónico

26.
La función TO_DAYS(fecha) regresa, el número de días desde:

enero 1 del año en curso

27.
El comando para modificar la estructura de una tabla es:

ALTER

28.
El formato correcto para agregar una tupla a alguna tabla, es:

INSERT INTO tabla(columna_1, columna_2) VALUES(valor_1, valor_2);

29.
La sentencia que evita que se dupliquen datos y/o se violen reglas de unicidad en MySQL es:

ON DUPICATE columna_1 = valor_1;

30.
Selecciona la única opción correcta para completar el enunciado: el commando UPDATE, por definición permite:

Modificar muchas tuplas al mismo tiempo.